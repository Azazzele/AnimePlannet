// –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ URL
const urlParams = new URLSearchParams(window.location.search);
const characterId = urlParams.get('id');  // ID –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
const characterName = decodeURIComponent(urlParams.get('name'));  // –ò–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞

const characterDetailsContainer = document.querySelector('#character-details');

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
if (!characterId || !characterName) {
  characterDetailsContainer.innerHTML = '<p>–ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–µ —É–∫–∞–∑–∞–Ω—ã –≤ URL.</p>';
} else {
  // –ì—Ä–∞—ÑQL-–∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ
  const query = `
  query ($id: Int) {
    Character (id: $id) {
      name {
        full
      }
      image {
        large
      }
      description
      dateOfBirth {
        day
        month
        year
      }
      gender 
      media {
        edges {
          node {
            id
            format
            title {
              romaji
              english
              native
            }
            coverImage {
              extraLarge
            }
          }
            
        }
      }
    }
  }
  `;

  const variables = {
    id: parseInt(characterId)  // –ò—Å–ø–æ–ª—å–∑—É–µ–º ID –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
  };

  const url = 'https://graphql.anilist.co';
  const options = {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Accept': 'application/json',
    },
    body: JSON.stringify({
      query: query,
      variables: variables
    })
  };

  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç
  fetch(url, options)
    .then(handleResponse)
    .then(handleData)
    .catch(handleError);

  function handleResponse(response) {
    if (!response.ok) {
      throw new Error('–°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞');
    }
    return response.json();
  }

  function handleData(data) {
    const character = data.data.Character;
    const gender = getGenderInRussian(character.gender); 
    const imageUrl = character.image ? character.image.large : 'https://via.placeholder.com/150?text=No+Image';
    const birthDate = character.dateOfBirth || {};
    const description = character.description || '–û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–æ';
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è
    const birthDateString = getBirthDateString(birthDate);
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    const birthdayIcon = checkBirthday(birthDate);


    const mediaItems = character.media.edges.length > 0 ? character.media.edges.map(edge => {
  const format = getFormat(edge.node.format);
  const title = edge.node.title.romaji || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
  const coverImage = edge.node.coverImage.extraLarge || 'https://via.placeholder.com/150?text=No+Image';

  return `
    <li class="${format.class}">
      <a href="../page.html?name=${encodeURIComponent(title)}&animeId=${edge.node.id}" class="character-link">
        <img src="${coverImage}" alt="${title}" style="max-width: 100px; height: auto;">
        <div class="title_name">
          <div class="details"> <span>${title}</span></div>
          <div class="details"> <span>${format.label}</span></div>
        </div>
      </a> 
    </li>
  `;
}).join('') : '<li>–ù–µ—Ç –º–µ–¥–∏–∞-—Å–µ—Ä–∏–∞–ª–æ–≤</li>';
  const collectionsCount = character.collections ? character.collections.length : 0;
  const listsCount = character.lists ? character.lists.length : 0;
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–∫—Ç–µ—Ä–æ–≤ –æ–∑–≤—É—á–∫–∏
  const voiceActors = character.voiceActors && character.voiceActors.length > 0 ? character.voiceActors.map(actor => {
    const actorName = actor.name.full || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
    const actorImage = actor.image ? actor.image.large : 'https://via.placeholder.com/50?text=No+Image';
    const actorLanguage = actor.language || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';

    return `
      <li>
        <div class="actor">
          <img src="${actorImage}" alt="${actorName}" style="width: 50px; height: 50px; border-radius: 50%;">
          <div>
            <span><strong>${actorName}</strong> (${actorLanguage})</span>
          </div>
        </div>
      </li>
    `;
  }).join('') : '<li>–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–∫—Ç–µ—Ä–∞—Ö –æ–∑–≤—É—á–∫–∏</li>';
    characterDetailsContainer.innerHTML = `
      <div class="character-details">
        <div class="poster_info">
          <img src="${imageUrl}" alt="${character.name.full}">
          <h3>${character.name.full}</h3>
          
          <!-- –ò–∫–æ–Ω–∫–∞ –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è -->
          ${birthdayIcon}
          
        <div class="icon-container">
          <a href="#" class="icon-link" title="–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ–ª–ª–µ–∫—Ü–∏—é">
            <i class="fa fa-heart"></i>
            <span class="icon-text">–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ–ª–ª–µ–∫—Ü–∏—é</span> <!-- –¢–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ -->
          </a>
          <a href="#" class="icon-link" title="–ü–æ–¥–µ–ª–∏—Ç—å—Å—è">
            <i class="fa fa-share-alt"></i>
            <span class="icon-text">–ü–æ–¥–µ–ª–∏—Ç—å—Å—è</span> <!-- –¢–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ -->
          </a>
          <a href="#" class="icon-link" title="–°–¥–µ–ª–∞—Ç—å —Ñ–∞–≤–æ—Ä–∏—Ç–æ–º">
            <i class="fa fa-bolt"></i>
            <span class="icon-text">–°–¥–µ–ª–∞—Ç—å —Ñ–∞–≤–æ—Ä–∏—Ç–æ–º</span> <!-- –¢–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ -->
          </a>
          <a href="#" class="icon-link" title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å" onclick="editCharacter()"><i class="fa fa-edit"></i>
          <span class="icon-text">–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</span>
          </a>
        </div>

          
          <aside class="aside">
            <div class="collection_name">
                <h2>–í –ö–æ–ª–ª–µ–∫—Ü–∏—è—Ö <span id="countCollection">${collectionsCount}</span></h2>
                <h2>–í —Å–ø–∏—Å–∫–∞—Ö —É <span id="countLists">${listsCount}</span></h2>
            </div>
          </aside>    
        </div>
        
        <div class="info_charcter">
          <p>${description}</p>
          <div class="other_info">
            <h3>–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: ${birthDateString}</h3>
            <h3>–ü–æ–ª: ${gender}</h3>
          </div>
        </div>
        
        <div class="dnime_charcters">
          <ul class='list_anime'>
            ${mediaItems}
          </ul>
        </div>
      </div>
    `;
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–º–µ–Ω–∏ –º–µ—Å—è—Ü–∞ –ø–æ –µ–≥–æ –Ω–æ–º–µ—Ä—É
  function getMonthName(monthNumber) {
    const months = [
      '–Ø–Ω–≤–∞—Ä—å', '–§–µ–≤—Ä–∞–ª—å', '–ú–∞—Ä—Ç', '–ê–ø—Ä–µ–ª—å', '–ú–∞–π', '–ò—é–Ω—å',
      '–ò—é–ª—å', '–ê–≤–≥—É—Å—Ç', '–°–µ–Ω—Ç—è–±—Ä—å', '–û–∫—Ç—è–±—Ä—å', '–ù–æ—è–±—Ä—å', '–î–µ–∫–∞–±—Ä—å'
    ];
    return months[monthNumber - 1] || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'; // monthNumber –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 1
  }
// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–∞ –Ω–∞ —Ä—É—Å—Å–∫–æ–º
  function getGenderInRussian(gender) {
    switch (gender) {
      case 'MALE':
        return '–ú—É–∂—Å–∫–æ–π';
      case 'FEMALE':
        return '–ñ–µ–Ω—Å–∫–∏–π';
      default:
        return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
    }
  }
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç—Ä–æ–∫–∏ –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è
  function getBirthDateString(birthDate) {
    const day = birthDate.day != null ? birthDate.day : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
    const month = birthDate.month != null ? getMonthName(birthDate.month) : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
    const year = birthDate.year != null ? birthDate.year : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
    return `${day} ${month} ${year}`;
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–µ–≥–æ–¥–Ω—è –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
  function checkBirthday(birthDate) {
    const today = new Date();
    const currentDay = today.getDate();
    const currentMonth = today.getMonth() + 1; // –í JavaScript –º–µ—Å—è—Ü—ã –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å 0, –ø–æ—ç—Ç–æ–º—É –ø—Ä–∏–±–∞–≤–ª—è–µ–º 1

    if (birthDate.day === currentDay && birthDate.month === currentMonth) {
      return `
        <div class="birthday-celebration">
          <span>üéÇ –° –î–Ω–µ–º –†–æ–∂–¥–µ–Ω–∏—è! üéâ</span>
        </div>
      `;
    }
    return ''; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É, –µ—Å–ª–∏ —Å–µ–≥–æ–¥–Ω—è –Ω–µ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è
  }
  function getFormat(format) {
  switch (format) {
    case 'MANGA':
      return { label: '–ú–∞–Ω–≥–∞', class: 'format-manga' };
    case 'NOVELE':
      return { label: '–†–∞–Ω–æ–±—ç', class: 'format-novele' };
    case 'TV':
      return { label: '–¢–≤ —Å–µ—Ä–∏–∞–ª', class: 'format-tv' };
    case 'MOVIE':
      return { label: '–§–∏–ª—å–º', class: 'format-movie' };
    case 'OVA':
      return { label: 'OVA', class: 'format-ova' };
    case 'ONA':
      return { label: 'ONA', class: 'format-ona' };
    case 'SPECIAL':
      return { label: '–¢–≤ —Å–ø–µ—à–∏–∞–ª', class: 'format-special' };
    default:
      return { label: '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ', class: 'format-unknown' };
  }
}

}
 function handleError(error) {
  console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
  characterDetailsContainer.innerHTML = `
    <p>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö.</p>
    <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.</p>
  `;
}
function addToCollection() {
  alert('–ü–µ—Ä—Å–æ–Ω–∞–∂ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ–ª–ª–µ–∫—Ü–∏—é!');
}

function shareCharacter() {
  const url = window.location.href;
  if (navigator.share) {
    navigator.share({
      title: characterName,
      url: url
    })
    .then(() => console.log('–£—Å–ø–µ—à–Ω–æ –ø–æ–¥–µ–ª–∏–ª–∏—Å—å!'))
    .catch((error) => console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è:', error));
  } else {
    alert('–í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –æ–±–º–µ–Ω–∞. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—Å—ã–ª–∫—É: ' + url);
  }
}

function makeFavorite() {
  alert('–ü–µ—Ä—Å–æ–Ω–∞–∂ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ!');
}

// –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
function editCharacter() {
  const newName = prompt('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞:', characterName);
  if (newName !== null && newName.trim() !== '') {
    // –ï—Å–ª–∏ –∏–º—è –∏–∑–º–µ–Ω–µ–Ω–æ, –æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ
    characterDetailsContainer.querySelector('h3').textContent = newName;
    alert('–ò–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞: ' + newName);
  } else {
    alert('–ò–º—è –Ω–µ –±—ã–ª–æ –∏–∑–º–µ–Ω–µ–Ω–æ.');
  }
}